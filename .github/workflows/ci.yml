name: CI/CD

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Test
      run: go test -v ./...

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Build
      run: CGO_ENABLED=0 go build -v ./cmd/vkftpd

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: vkftpd
        path: vkftpd

  docker:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Build release binaries
      env:
        CGO_ENABLED: 0
      run: |
        GOOS=linux GOARCH=amd64 go build -o vkftpd-linux-amd64 ./cmd/vkftpd
        GOOS=darwin GOARCH=amd64 go build -o vkftpd-darwin-amd64 ./cmd/vkftpd
        GOOS=darwin GOARCH=arm64 go build -o vkftpd-darwin-arm64 ./cmd/vkftpd
        GOOS=windows GOARCH=amd64 go build -o vkftpd-windows-amd64.exe ./cmd/vkftpd

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          vkftpd-linux-amd64
          vkftpd-darwin-amd64
          vkftpd-darwin-arm64
          vkftpd-windows-amd64.exe
        generate_release_notes: true
